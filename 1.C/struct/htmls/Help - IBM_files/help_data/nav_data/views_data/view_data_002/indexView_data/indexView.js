var isMozilla=navigator.userAgent.indexOf("Mozilla")!=-1&&parseInt(navigator.appVersion.substring(0,1))>=5; var isIE=navigator.userAgent.indexOf("MSIE")!=-1; var showExpanders=false; var shown=false; var typeinPrevious=""; var typein; var lines=30; var firstEntry; var lastEntry; var showAllChanged=false; var showAll; function sizeList(){ resizeVertical("indexList","typeinTable","navigation",100,5); }; function computeLines(){ try{ var _1=document.getElementById("indexList"); var _2=document.getElementById("placeholder"); var _3=_1.offsetHeight/(_2.offsetHeight+1); lines=Math.floor(_3); if(lines<1){ lines=1; } } catch(ex){ } }; function showIndex(){ loadChildren(typein.value); }; function isVisible(){ var _4=parent.parent.getVisibility("index"); return _4=="visible"; }; function onloadHandler(){ setRootAccessibility(); typein=document.getElementById("typein"); typein.value=""; typeinPrevious=""; if(isIE){ document.onclick=treeMouseClickHandler; document.onkeydown=keyDownHandler; }else{ document.addEventListener("click",treeMouseClickHandler,true); } setInterval("intervalHandler()",200); sizeList(); if(isVisible()){ onShow(); } }; function setImage(_5,_6){ var _7=imagesDirectory+"/"+_6+".gif"; _5.src=_7; if(_6=="plus"){ _5.alt=altPlus; }else{ if(_6=="minus"){ _5.alt=altMinus; }else{ if(_6=="toc_open"){ _5.alt=altBookOpen; }else{ if(_6=="toc_closed"){ _5.alt=altBookClosed; }else{ if(_6=="container_obj"){ _5.alt=altContainer; }else{ if(_6=="container_topic"){ _5.alt=altContainerTopic; }else{ if(_6=="topic"){ _5.alt=altTopic; }else{ _5.alt=""; } } } } } } } }; function updateImage(_8,_9){ var _a=_8.src; if(_9){ if(_a.match(/toc_closed.gif$/)){ setImage(_8,"toc_open"); } }else{ if(_a.match(/toc_open.gif$/)){ setImage(_8,"toc_closed"); } } }; function loadChildren(_b,_c,_d){ var _e=""; var _f=document.getElementById("tree_root"); if(_f!==null){ while(_f.childNodes.length>0){ _f.removeChild(_f.childNodes[0]); } var _10=document.createElement("DIV"); _10.className="unopened"; _10.id="placeholder"; _f.appendChild(_10); setLoadingMessage(_f,loadingMessage); computeLines(); var _11="?"; if(_b){ _e+="?start="; _e+=encodeURIComponent(_b); _11="&"; } if(lines){ _e+=_11; _e+="size="; _e+=lines; _11="&"; } if(_c){ _e+=_11; _e+="mode="; _e+=_c; _11="&"; } if(_d){ _e+=_11; _e+="entry="; _e+=_d; _11="&"; } if(showAllChanged){ showAllChanged=false; _e+=_11; _e+="showAll="; if(showAll){ _e+="on"; }else{ _e+="off"; } } makeNodeRequest(_e); } }; function updateIndexTree(xml){ updateTree(xml); removePlaceholder(); var _13=xml.documentElement; var _14=document.getElementById("previous"); var _15=_13.getAttribute("enablePrevious"); if(_15=="false"){ _14.className="h"; }else{ _14.className="enabled"; } var _16=document.getElementById("next"); var _17=_13.getAttribute("enableNext"); if(_17=="false"){ _16.className="h"; }else{ _16.className="enabled"; } }; function removePlaceholder(){ var _18=document.getElementById("tree_root"); if(_18==null){ return; } var _19=findChild(_18,"DIV"); if(_19&&_19.className=="unopened"){ _18.removeChild(_19); } }; function makeNodeRequest(_1a){ var _1b="../indexfragment"+_1a; var _1c=function(xml){ updateIndexTree(xml); }; var _1e=function(){ }; ajaxRequest(_1b,_1c,_1e); }; function getFirstAndLast(){ var _1f=document.getElementById("tree_root"); if(_1f==null){ return; } var _20=findChild(_1f,"DIV"); if(_20&&_20.nodeid){ firstEntry=_20.nodeid.substring(1); } var _21=findLastChild(_1f,"DIV"); if(_21&&_21.nodeid){ lastEntry=_21.nodeid.substring(1); } }; function loadPreviousPage(){ getFirstAndLast(); if(firstEntry){ loadChildren("","previous",firstEntry); }else{ loadChildren(""); } }; function loadNextPage(){ getFirstAndLast(); if(lastEntry){ loadChildren("","next",lastEntry); }else{ loadChildren(""); } }; function loadCurrentPage(){ getFirstAndLast(); if(firstEntry&&firstEntry>0){ loadChildren("","next",firstEntry-1); }else{ loadChildren(""); } }; function onShow(){ sizeList(); if(!shown){ loadChildren(""); shown=true; } }; function setShowAll(_22){ showAll=_22; showAllChanged=true; if(shown){ loadCurrentPage(); } }; function typeinChanged(){ if(typein.value==typeinPrevious){ return; } typeinPrevious=typein.value; loadChildren(typeinPrevious); }; function keyDownHandler(e){ var key=getKeycode(e); if(key==33){ cancelEventBubble(e); loadPreviousPage(); return; } if(key==34){ cancelEventBubble(e); loadNextPage(); return; } var _25=getEventTarget(e); if(_25&&_25.id=="typein"){ typeinKeyDownHandler(e); }else{ treeKeyDownHandler(e); } }; function typeinKeyDownHandler(e){ var key=getKeycode(e); if(key==13){ typeinChanged(); cancelEventBubble(e); }else{ return treeKeyDownHandler(e); } return false; }; function intervalHandler(){ typeinChanged(); }; 