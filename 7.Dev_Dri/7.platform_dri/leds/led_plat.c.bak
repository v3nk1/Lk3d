#include <linux/kernel.h>
#include <linux/module.h>
#include <linux/version.h>
#include <linux/platform_device.h>
#include <linux/platform_data/leds-s3c24xx.h>
#include <mach/gpio-samsung.h>
/*
static struct s3c24xx_led_platdata mini2440_led4_pdata = {
        .name           = "led4",
        .gpio           = S3C2410_GPB(8),
        .flags          = S3C24XX_LEDF_ACTLOW | S3C24XX_LEDF_TRISTATE,
        .def_trigger    = "",
};

struct platform_device mini2440_led4 = {
        .name           = "s3c24xx_led",
        .id             = 4,
	.dev            = {
                .platform_data  = &mini2440_led4_pdata,
        },

};
*/
int led_probe(struct platform_device *pd){

	printk("%s: Invoked\n",__func__);
	return 0;

}

int led_remove(struct platform_device *pd){

	printk("%s: Invoked\n",__func__);
	return 0;

}

//struct platform_device_id id={"s3c24xx_led",4};

struct platform_driver ledplat={
		.driver={
			.name = "s3c24xx_led.4",
                	.owner = THIS_MODULE,
			},
		.probe=led_probe,
		.remove=led_remove,
		//.id_table=&id,
		};

int __init init_module(void){

	platform_driver_register(&ledplat);
	//platform_device_add(&mini2440_led4);
	return 0;
}

void cleanup_module(void){

	platform_driver_unregister(&ledplat);
	//platform_device_del(&mini2440_led4);

}

MODULE_LICENSE("GPL");
